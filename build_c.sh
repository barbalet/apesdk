#!/bin/bash
#	build.sh
#
#	=============================================================
#
#   Copyright 1996-2024 Tom Barbalet. All rights reserved.
#
#   Permission is hereby granted, free of charge, to any person
#   obtaining a copy of this software and associated documentation
#   files (the "Software"), to deal in the Software without
#   restriction, including without limitation the rights to use,
#   copy, modify, merge, publish, distribute, sublicense, and/or
#   sell copies of the Software, and to permit persons to whom the
#   Software is furnished to do so, subject to the following
#   conditions:
#
#   The above copyright notice and this permission notice shall be
#	included in all copies or substantial portions of the Software.
#
#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
#   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
#   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
#   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
#   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
#   OTHER DEALINGS IN THE SOFTWARE.
#
#   This software is a continuing work of Tom Barbalet, begun on
#   13 June 1996. No apes or cats were harmed in the writing of
#   this software.

#!/bin/bash

# Determine CFLAGS
if [ "$1" == "--debug" ]; then
    CFLAGS="-g"
else
    CFLAGS="-O2"
fi

# Determine command-line define
if [ "$1" == "--additional" ]; then
    COMMANDLINEE="-DNOTHING_NEEDED_HERE"
else
    COMMANDLINEE="-DCOMMAND_LINE_EXPLICIT"
fi

# Output file name
OUTPUT_C="combined_build.c"

# Clean old file
rm -f "$OUTPUT_C"

# Create header comment
echo "/* Autogenerated combined source file */" >> "$OUTPUT_C"

# Concatenate all .c files in required order
for dir in toolkit script sim entity universe
do
    for file in ./$dir/*.c
    do
        echo "/* $file */" >> "$OUTPUT_C"
        cat "$file" >> "$OUTPUT_C"
        echo -e "\n" >> "$OUTPUT_C"
    done
done

# Add the main file last
echo "/* ./longterm.c */" >> "$OUTPUT_C"
cat ./longterm.c >> "$OUTPUT_C"

# Now compile the single C file
gcc $CFLAGS $COMMANDLINEE -I/usr/include -o ./../simape "$OUTPUT_C" -lz -lm -lpthread

# Exit if failure
if [ $? -ne 0 ]; then
    echo "Build failed"
    exit 1
fi

echo "Build succeeded. Output: ./../simape"
